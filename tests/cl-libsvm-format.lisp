(defpackage cl-libsvm-format-test
  (:use :cl
        :cl-libsvm-format
        :prove))
(in-package :cl-libsvm-format-test)

;; NOTE: To run this test file, execute `(asdf:test-system :cl-libsvm-format)' in your Lisp.

(defparameter kaggle-mnist
  "4 151:0.196078 152:0.878431 160:0.27451 161:0.113725 179:0.47451 180:0.905882 188:0.580392 189:0.658824 206:0.0156863 207:0.764706 208:0.905882 216:0.376471 217:0.823529 218:0.0431373 234:0.270588 235:0.988235 236:0.52549 244:0.447059 245:0.988235 246:0.0823529 261:0.176471 262:0.92549 263:0.85098 264:0.0470588 272:0.752941 273:0.988235 274:0.0823529 289:0.658824 290:0.968627 291:0.207843 299:0.0705882 300:1 301:0.992157 302:0.0823529 316:0.329412 317:0.94902 318:0.827451 327:0.552941 328:0.992157 329:0.741176 330:0.0196078 344:0.662745 345:0.988235 346:0.415686 354:0.12549 355:0.909804 356:0.980392 357:0.258824 371:0.0588235 372:0.882353 373:0.988235 382:0.52549 383:0.988235 384:0.827451 399:0.0862745 400:0.988235 401:0.643137 410:0.662745 411:0.988235 412:0.654902 427:0.0352941 428:0.8 429:0.819608 430:0.0705882 437:0.0862745 438:0.992157 439:0.992157 440:0.419608 456:0.662745 457:0.988235 458:0.780392 459:0.333333 460:0.333333 461:0.333333 462:0.333333 463:0.505882 464:0.643137 465:0.764706 466:0.988235 467:0.988235 468:0.415686 484:0.160784 485:0.666667 486:0.960784 487:0.988235 488:0.988235 489:0.988235 490:0.988235 491:0.909804 492:0.905882 493:0.984314 494:0.988235 495:0.988235 496:0.0352941 514:0.192157 515:0.329412 516:0.329412 517:0.329412 518:0.329412 521:0.631373 522:0.988235 523:0.988235 549:0.498039 550:0.988235 551:0.988235 552:0.176471 577:0.501961 578:0.992157 579:0.992157 605:0.498039 606:0.988235 607:0.988235 633:0.529412 634:0.988235 635:0.956863 661:0.909804 662:0.92549 663:0.435294 689:0.701961 690:0.258824 
")

(plan nil)

(is (car (parse-file (merge-pathnames
                      #P"tests/datasets/iris.scale"
                      (asdf:system-source-directory :cl-libsvm-format))))
    '(1 1 -0.555556 2 0.25 3 -0.864407 4 -0.916667)
    :test #'equalp)

(is (parse-file (merge-pathnames
                 #P"tests/datasets/float-label"
                 (asdf:system-source-directory :cl-libsvm-format)))
    '((96.1 1 -0.998916 2 -1.0 3 -0.822351 4 -0.973268 5 -0.979813 6 -0.960239 7
       -0.959704 8 -0.986756 9 -0.984752 10 -0.998866 11 -0.854494 12 -0.0520158)
      (95.2 1 -0.998916 2 -1.0 3 -0.955426 4 -0.977033 5 -0.978712 6 -0.980119 7
       -0.993284 8 -0.926592 9 -0.947685 10 -0.998157 11 -0.987471 12 0.52595997))
    :test #'equalp)

(is (with-input-from-string (s kaggle-mnist)
      (parse-stream s :buffer-size 100 :field-size 10))
    '((4 151 0.196078 152 0.878431 160 0.27451 161 0.113725 179 0.47450998 180
       0.905882 188 0.580392 189 0.658824 206 0.0156863 207 0.764706 208 0.905882
       216 0.376471 217 0.823529 218 0.0431373 234 0.270588 235 0.988235 236 0.52549
       244 0.447059 245 0.988235 246 0.0823529 261 0.176471 262 0.92548996 263
       0.85098 264 0.047058802 272 0.752941 273 0.988235 274 0.0823529 289 0.658824
       290 0.968627 291 0.207843 299 0.0705882 300 1.0 301 0.992157 302 0.0823529
       316 0.329412 317 0.94901997 318 0.827451 327 0.552941 328 0.992157 329
       0.741176 330 0.019607801 344 0.662745 345 0.988235 346 0.415686 354 0.12549
       355 0.909804 356 0.980392 357 0.258824 371 0.0588235 372 0.882353 373
       0.988235 382 0.52549 383 0.988235 384 0.827451 399 0.086274505 400 0.988235
       401 0.643137 410 0.662745 411 0.988235 412 0.654902 427 0.0352941 428 0.8 429
       0.819608 430 0.0705882 437 0.086274505 438 0.992157 439 0.992157 440 0.419608
       456 0.662745 457 0.988235 458 0.780392 459 0.333333 460 0.333333 461 0.333333
       462 0.333333 463 0.505882 464 0.643137 465 0.764706 466 0.988235 467 0.988235
       468 0.415686 484 0.160784 485 0.666667 486 0.960784 487 0.988235 488 0.988235
       489 0.988235 490 0.988235 491 0.909804 492 0.905882 493 0.984314 494 0.988235
       495 0.988235 496 0.0352941 514 0.192157 515 0.329412 516 0.329412 517
       0.329412 518 0.329412 521 0.631373 522 0.988235 523 0.988235 549 0.498039 550
       0.988235 551 0.988235 552 0.176471 577 0.501961 578 0.992157 579 0.992157 605
       0.498039 606 0.988235 607 0.988235 633 0.529412 634 0.988235 635 0.956863 661
       0.909804 662 0.92548996 663 0.435294 689 0.701961 690 0.258824))
    :test #'equalp)

(is (with-input-from-string (s kaggle-mnist)
      (parse-stream s :buffer-size 10 :field-size 10))
    '((4 151 0.196078 152 0.878431 160 0.27451 161 0.113725 179 0.47450998 180
       0.905882 188 0.580392 189 0.658824 206 0.0156863 207 0.764706 208 0.905882
       216 0.376471 217 0.823529 218 0.0431373 234 0.270588 235 0.988235 236 0.52549
       244 0.447059 245 0.988235 246 0.0823529 261 0.176471 262 0.92548996 263
       0.85098 264 0.047058802 272 0.752941 273 0.988235 274 0.0823529 289 0.658824
       290 0.968627 291 0.207843 299 0.0705882 300 1.0 301 0.992157 302 0.0823529
       316 0.329412 317 0.94901997 318 0.827451 327 0.552941 328 0.992157 329
       0.741176 330 0.019607801 344 0.662745 345 0.988235 346 0.415686 354 0.12549
       355 0.909804 356 0.980392 357 0.258824 371 0.0588235 372 0.882353 373
       0.988235 382 0.52549 383 0.988235 384 0.827451 399 0.086274505 400 0.988235
       401 0.643137 410 0.662745 411 0.988235 412 0.654902 427 0.0352941 428 0.8 429
       0.819608 430 0.0705882 437 0.086274505 438 0.992157 439 0.992157 440 0.419608
       456 0.662745 457 0.988235 458 0.780392 459 0.333333 460 0.333333 461 0.333333
       462 0.333333 463 0.505882 464 0.643137 465 0.764706 466 0.988235 467 0.988235
       468 0.415686 484 0.160784 485 0.666667 486 0.960784 487 0.988235 488 0.988235
       489 0.988235 490 0.988235 491 0.909804 492 0.905882 493 0.984314 494 0.988235
       495 0.988235 496 0.0352941 514 0.192157 515 0.329412 516 0.329412 517
       0.329412 518 0.329412 521 0.631373 522 0.988235 523 0.988235 549 0.498039 550
       0.988235 551 0.988235 552 0.176471 577 0.501961 578 0.992157 579 0.992157 605
       0.498039 606 0.988235 607 0.988235 633 0.529412 634 0.988235 635 0.956863 661
       0.909804 662 0.92548996 663 0.435294 689 0.701961 690 0.258824))
    :test #'equalp)

(is (with-input-from-string (s kaggle-mnist)
      (parse-stream s :buffer-size 1 :field-size 10))
    '((4 151 0.196078 152 0.878431 160 0.27451 161 0.113725 179 0.47450998 180
       0.905882 188 0.580392 189 0.658824 206 0.0156863 207 0.764706 208 0.905882
       216 0.376471 217 0.823529 218 0.0431373 234 0.270588 235 0.988235 236 0.52549
       244 0.447059 245 0.988235 246 0.0823529 261 0.176471 262 0.92548996 263
       0.85098 264 0.047058802 272 0.752941 273 0.988235 274 0.0823529 289 0.658824
       290 0.968627 291 0.207843 299 0.0705882 300 1.0 301 0.992157 302 0.0823529
       316 0.329412 317 0.94901997 318 0.827451 327 0.552941 328 0.992157 329
       0.741176 330 0.019607801 344 0.662745 345 0.988235 346 0.415686 354 0.12549
       355 0.909804 356 0.980392 357 0.258824 371 0.0588235 372 0.882353 373
       0.988235 382 0.52549 383 0.988235 384 0.827451 399 0.086274505 400 0.988235
       401 0.643137 410 0.662745 411 0.988235 412 0.654902 427 0.0352941 428 0.8 429
       0.819608 430 0.0705882 437 0.086274505 438 0.992157 439 0.992157 440 0.419608
       456 0.662745 457 0.988235 458 0.780392 459 0.333333 460 0.333333 461 0.333333
       462 0.333333 463 0.505882 464 0.643137 465 0.764706 466 0.988235 467 0.988235
       468 0.415686 484 0.160784 485 0.666667 486 0.960784 487 0.988235 488 0.988235
       489 0.988235 490 0.988235 491 0.909804 492 0.905882 493 0.984314 494 0.988235
       495 0.988235 496 0.0352941 514 0.192157 515 0.329412 516 0.329412 517
       0.329412 518 0.329412 521 0.631373 522 0.988235 523 0.988235 549 0.498039 550
       0.988235 551 0.988235 552 0.176471 577 0.501961 578 0.992157 579 0.992157 605
       0.498039 606 0.988235 607 0.988235 633 0.529412 634 0.988235 635 0.956863 661
       0.909804 662 0.92548996 663 0.435294 689 0.701961 690 0.258824))
    :test #'equalp)

(finalize)
